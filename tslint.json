{
  "extends": "tslint:latest",
  "rules": {
    "quotemark": [true, "single"],
    "interface-name": false,
    "member-ordering": [true, { "order": "fields-first" }],
    "variable-name": [true, "allow-snake-case", "allow-leading-underscore", "ban-keywords"], // 校验变量名
    "align": [true, "parameters", "arguments", "statements"], //检查参数对齐

    "ordered-imports": true, // 要求import有排序
    "no-reference-import": true, // 禁止使用三斜杠引入类型定义文件
    "no-duplicate-imports": true, // 禁止出现重复的 import
    "import-spacing": true, // import 语句中，关键字之间的间距必须是一个空格
    "eofline": true, // 确保该文件以换行符结束。
    "member-access": true, //需要显式声明为类成员的public/protect/privite属性
    "no-var-requires": false, // 不允许使用 var require
    "no-trailing-whitespace": true, // 禁止行尾有空格
    "no-parameter-properties": true, // ??????禁止给类的构造函数的参数添加修饰符
    "no-unused-expression": true, // 禁止无用的表达式
    "no-use-before-declare": true, // 变量必须先定义后使用
    "no-var-keyword": true, // 禁止使用 var
    "triple-equals": true, // 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外
    "only-arrow-functions": [
      // 必须使用箭头函数，除非是单独的函数声明或是命名函数
      true,
      "allow-declarations",
      "allow-named-functions"
    ],

    "adjacent-overload-signatures": true, // 定义函数时如果用到了覆写，则必须将覆写的函数写到一起
    "return-undefined": true, // 使用 return; 而不是 return undefined;
    "curly": [true, "ignore-same-line"], // if 后面必须有 {，除非是单行 if
    "forin": true, // for in 内部必须有 hasOwnProperty
    "no-empty": [true, "allow-empty-catch"], // 禁止出现空代码块，允许 catch 是空代码块
    "no-unnecessary-type-assertion": true, // 禁止无用的类型断言
    "no-for-in-array": true, // 禁止对 array 使用 for in 循环
    "no-conditional-assignment": true, // 禁止在分支条件判断中有赋值操作
    "no-construct": true, // 禁止使用 new 来生成 String, Number 或 Boolean
    "no-return-await": true, // 禁止没必要的 return await
    "no-duplicate-super": true, // 禁止 super 在一个构造函数中出现两次
    "no-duplicate-switch-case": true, // 禁止在 switch 语句中出现重复测试表达式的 case
    "no-duplicate-variable": [true, "check-parameters"], // 禁止出现重复的变量定义或函数参数名
    "no-eval": true, // 禁止使用 eval
    "no-sparse-arrays": true, // 禁止在数组中出现连续的逗号，如 let foo = [,,]
    "no-string-throw": true, // 禁止 throw 字符串，必须 throw 一个 Error 对象
    "no-angle-bracket-type-assertion": true, // 类型断言必须使用 as Type，禁止使用 <Type> <Type> 容易被理解为 jsx
    "no-consecutive-blank-lines": [true, 3], // 禁止连续超过三行空行
    "no-irregular-whitespace": true, // 禁止使用特殊空白符（比如全角空格）
    "no-redundant-jsdoc": true, // 禁止使用 JSDoc，因为 TypeScirpt 已经包含了大部分功能
    "no-unnecessary-initializer": true, // 禁止变量定义时赋值为 undefined
    "prefer-object-spread": true, // 使用 { ...foo, bar: 1 } 代替 Object.assign({}, foo, { bar: 1 }), 前者的类型检查更完善
    "use-isnan": true, // 必须使用 isNaN(foo) 而不是 foo === NaN
    "cyclomatic-complexity": false, //[true, 20], // 禁止函数的循环复杂度超过 20，https://en.wikipedia.org/wiki/Cyclomatic_complexity
    "deprecation": true, // 禁止使用废弃（被标识了 @deprecated）的 API
    "indent": [true, "spaces", 2], // 一个缩进必须用2个空格替
    "no-mergeable-namespace": true, // 禁止一个文件中出现多个相同的 namespace
    "encoding": true, // 文件类型必须时 utf-8
    "interface-over-type-literal": true, // 接口可以 implement extend 和 merge
    "new-parens": true, // new 后面只必须有一个空格
    "number-literal-format": true, // 小数必须以 0. 开头，禁止以 . 开头，并且不能以 0 结尾
    "one-variable-per-declaration": [true, "ignore-for-loop"], // 变量申明必须每行一个，for 循环的初始条件中除外
    "semicolon": [true, "always", "ignore-interfaces"], // 行尾必须有分号
    "space-before-function-paren": true, // 函数名前必须有空格
    "space-within-parens": [true, 0], // 括号内首尾禁止有空格
    "no-unsafe-finally": true, // 禁止 finally 内出现 return, continue, break, throw 等, finally 会比 catch 先执行
    "max-classes-per-file": [true, 10],
    
    // 禁止将 this 赋值给其他变量，除非是解构赋值
    "no-this-assignment": [
      false,
      {
        "allowed-names": ["^self$"],
        "allow-destructuring": true
      }
    ],
    "no-unbound-method": false, // 使用实例的方法时，必须 bind 到实例上
    "no-object-literal-type-assertion": false,
    "no-reference": false, // 禁止 <reference path=>
    "no-shadowed-variable": false, // 禁止变量声明覆盖外层作用域的变量
    "max-line-length": false, // 限制最长行长度
    "no-bitwise": false, // 禁止位操作
    "prefer-const": false, // 优先使用 const
    "object-literal-sort-keys": false, // 对象key有序
    "trailing-comma": false, // 禁止多余的逗号
    "no-empty-interface": false, //不允许空的 interface
    "no-console": false, // 禁止console
    "no-debugger": false, // 禁止使用 debugger
    "comment-format": false, //检查注释的格式
    "no-switch-case-fall-through": false, // switch 的 case 必须 return 或 break
    "one-line": false, // if 后的 { 禁止换行
    "object-literal-shorthand": false, // 必须使用 a = {b} 而不是 a = {b: b}
    "radix": false, // parseInt 必须传入第二个参数
    "no-parameter-reassignment": false, // 禁止对函数的参数重新赋值
    "no-submodule-imports": false
  }
}
